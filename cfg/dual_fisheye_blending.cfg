#!/usr/bin/env python
PACKAGE = "reprojection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

projection_enum = gen.enum([ gen.const("Equirectangular",  int_t, 0, ""),
                             gen.const("Fisheye",          int_t, 1, ""),
                             gen.const("Rectilinear",      int_t, 2, ""),
                             gen.const("Cubemap",          int_t, 3, "")],
                             "An enum to set projection")

gen.add("left_correction1",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_correction2",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_correction3",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_correction4",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_croppedWidth",	    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("left_croppedHeight",	    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("left_xCenter",		        double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("left_yCenter",		        double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("left_pitch",		        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("left_roll",		        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("left_yaw",			        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("left_fovIn",		        double_t, 0, "",    180.0, 0.0,   360.0)	
gen.add("left_fovOut",		        double_t, 0, "",    180.0, 0.0,   360.0)
gen.add("left_x",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("left_y",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("left_z",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("left_gridLines", 		    bool_t,   0, "",    False)
gen.add("left_outputProjection",    int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("left_inputProjection",     int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("left_linearBlend",	        bool_t,   0, "",    False)
gen.add("left_blendFront",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_blendBack",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("left_blendImages",	        bool_t,   0, "",    False)

gen.add("right_correction1",		double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_correction2",		double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_correction3",		double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_correction4",		double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_croppedWidth",	    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("right_croppedHeight",	    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("right_xCenter",		    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("right_yCenter",		    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("right_pitch",		        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("right_roll",		        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("right_yaw",			    double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("right_fovIn",		        double_t, 0, "",    180.0, 0.0,   360.0)	
gen.add("right_fovOut",		        double_t, 0, "",    180.0, 0.0,   360.0)
gen.add("right_x",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_y",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_z",			        double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("right_gridLines", 		    bool_t,   0, "",    False)
gen.add("right_outputProjection",   int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("right_inputProjection",    int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("right_linearBlend",	    bool_t,   0, "",    False)
gen.add("right_blendFront",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("right_blendBack",		    double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("right_blendImages",	    bool_t,   0, "",    False)

gen.add("rotated_correction1",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_correction2",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_correction3",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_correction4",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_croppedWidth",	    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("rotated_croppedHeight",	double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("rotated_xCenter",		    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("rotated_yCenter",		    double_t, 0, "",    0.0, -2000.0,   2000.0)
gen.add("rotated_pitch",		    double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("rotated_roll",		        double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("rotated_yaw",			    double_t, 0, "",    0.0, -360.0,   360.0)
gen.add("rotated_fovIn",		    double_t, 0, "",    180.0, 0.0,   360.0)	
gen.add("rotated_fovOut",		    double_t, 0, "",    180.0, 0.0,   360.0)
gen.add("rotated_x",			    double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("rotated_y",			    double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("rotated_z",			    double_t, 0, "",    1.0, 0.0,   2.0)
gen.add("rotated_gridLines", 		bool_t,   0, "",    False)
gen.add("rotated_outputProjection", int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("rotated_inputProjection",  int_t, 0, "", 0, 0, 3, edit_method=projection_enum)
gen.add("rotated_blendFront",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_linearBlend",	    bool_t,   0, "",    False)
gen.add("rotated_blendBack",		double_t, 0, "",    0.0, -1.0,   1.0)
gen.add("rotated_blendImages",	    bool_t,   0, "",    False)

exit(gen.generate(PACKAGE, "reprojection", "dual_fisheye_blending"))

